#include <Wire.h>
#include <SPI.h>
#include <Adafruit_Sensor.h>
#include "Adafruit_BME680.h"

#define BME_SCK 13
#define BME_MISO 12
#define BME_MOSI 11
#define BME_CS 10

#define SEALEVELPRESSURE_HPA (1013.25)

Adafruit_BME680 bme; // I2C

#include <PubSubClient.h>
#include <ESP8266WiFi.h>

bool metric = false;
const int postingInterval = 30 * 1000; // post data every 20 seconds

// Wi-Fi Settings
const char* ssid = "xxxxxxxxxxxxxxxxx"; // your wireless network name (SSID)
const char* password = "xxxxxxxxxxxxxxxxxxxxxxx"; // your Wi-Fi network password

WiFiClient client;

// ThingSpeak Settings
const int channelID = x; //write your channelID
String writeAPIKey = "xxxxxxxxxxxxxxxxxxx"; // write API key for your ThingSpeak Channel
const char* server = "xxxxxxxxxxxxxxxxxx";

void setup() {
  Serial.println("Connecting Wifi...");
  Serial.begin(115200);
  while(!Serial) {} // Wait
  while(!bme.begin()){
    Serial.println("Could not find BME680 sensor!");
    delay(1000);
  }
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
  }
  // Set up oversampling and filter initialization
  bme.setTemperatureOversampling(BME680_OS_8X);
  bme.setHumidityOversampling(BME680_OS_2X);
  bme.setPressureOversampling(BME680_OS_4X);
  bme.setIIRFilterSize(BME680_FILTER_SIZE_3);
  bme.setGasHeater(320, 150); // 320*C for 150 ms
}

void loop() {
  if (client.connect(server, 80)) {

    Serial.println("Collecting data.");
    // Read temperature as Celsius (the default)
    float t = (bme.temperature);
    // Read pressure
    float p = (bme.pressure / 100.0);
    // Read humidity
    float h = (bme.humidity);
    // Read gas_resistance
    float g = (bme.gas_resistance / 1000.0);    
    // Read altitude
    float a = (bme.readAltitude(SEALEVELPRESSURE_HPA));

    Serial.print("Temp: " + String(t));
    Serial.print("Â°"+ String(metric ? 'C' :'F'));
    Serial.print("\tHumidity: " + String(h) + "% RH");
    Serial.print("\tPressure: " + String(p) + " atm");
    Serial.print("\tAltitude: " + String(a));
    Serial.println((metric ? "m" : "ft"));
    
    // Measure Signal Strength (RSSI) of Wi-Fi connection
    long rssi = WiFi.RSSI();
    String strgth = String(rssi);
    Serial.println("Connecting Wifi...");

    // Construct API request body
    String body = "field1=";
           body += String(t);
           body += "&field2=";
           body += String(h);
           body += "&field3=";
           body += String(p);
           body += "&field4=";
           body += String(a);
           
    Serial.println("signal strength: " + strgth);
    client.print("POST /update HTTP/1.1\n");
    client.print("Host: api.thingspeak.com\n");
    client.print("Connection: close\n");
    client.print("X-THINGSPEAKAPIKEY: " + writeAPIKey + "\n");
    client.print("Content-Type: application/x-www-form-urlencoded\n");
    client.print("Content-Length: ");
    client.print(body.length());
    client.print("\n\n");
    client.print(body);
    client.print("\n\n");
    Serial.println("data sent");
  }
  client.stop();
  // wait and then post again
  delay(postingInterval);
}
